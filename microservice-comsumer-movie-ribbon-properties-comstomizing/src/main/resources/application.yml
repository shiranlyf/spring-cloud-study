spring:
  application:
    name: microservice-comsumer-movie-ribbon-properties-comstomizing
server:
  port: 8010   #消费者只需要进行端口的配置
#user: 
#  userServicePath: http://localhost:7900/simple/   对用户微服务硬编码的修改
#3. 这个是eureka的配置  这个表示的是注册到的eureka server服务端的地址
eureka:
  client:
    healthcheck:    #健康检查   需要spring-boot-starter-actuator依赖
       enabled: true
    serviceUrl:
       defaultZone: http://user:password123@localhost:8761/eureka   #这里是使用curl(使用的是http的方式进行认证)的方式进行认证
#      defaultZone: http://localhost:8761/eureka/  这里是没有进行eureka server认证时的地址
      
     
#  ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}}.  这个是默认的显示形式
  instance:
    prefer-ip-address: true   #这里表示使用ip进行注册   默认是false 在服务的注册鼠标移上去的时候就是一ip的形势进行显示的
    
#请求user的时候  就会使用随机的负载均衡的规则
#自定ribbon的配置
#WeightedResponseTimeRule 这里定义的使用规则   这里表示的优先级的规则(不同节点之间的响应时间)  规则都定义在Irule的实现类中
microservice-provider-user:    #这里指定的是请求的微服务的vip
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule  #这个是随机的策略
    
    
    